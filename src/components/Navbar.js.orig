import React, { useState } from "react"
<<<<<<< HEAD
import { Link } from "gatsby"
import styles from "../css/navbar.module.css"
import { FaAlignRight } from "react-icons/fa"
import links from "../constants/links"
import Logo from "../../static/images/logo.png"
=======
import { Link, graphql, useStaticQuery } from "gatsby"
import Img from "gatsby-image"
import { FaAlignRight } from "react-icons/fa"
import links from "../constants/links"
import { NavbarWrapper } from "../css"
>>>>>>> release/1.0

const Navbar = () => {
  const [isOpen, setNav] = useState(false)

  const data = useStaticQuery(getLogo)

  const toggleNav = () => {
    setNav(!isOpen)
  }

  return (
<<<<<<< HEAD
    <nav className={styles.navbar}>
      <div className={styles.navCenter}>
        <div className={styles.navHeader}>
          <Link to="/" data-cy="logo">
            <img src={Logo} alt="logo" />
=======
    <NavbarWrapper>
      <div className="nav-center">
        <div className="nav-header">
          <Link to="/" data-cy="logo">
            <Img fixed={data.logo.childImageSharp.fixed} alt="Homepage" />
>>>>>>> release/1.0
          </Link>

          <button
            type="button"
            className="logo-btn"
            onClick={toggleNav}
            aria-label="Open Menu"
            data-cy="mobile-button"
          >
            <FaAlignRight className="logo-icon" />
          </button>
        </div>
        <ul className={isOpen ? `nav-links show-nav` : `nav-links`}>
          {links.map((item, index) => {
            return (
              <li key={index}>
                <Link
                  to={item.path}
                  data-cy={item.text}
<<<<<<< HEAD
                  activeClassName={styles.active}
=======
                  activeClassName="navitem-active"
>>>>>>> release/1.0
                >
                  {item.text}
                </Link>
              </li>
            )
          })}
        </ul>
      </div>
    </NavbarWrapper>
  )
}

const getLogo = graphql`
  query {
    logo: file(relativePath: { eq: "logo.png" }) {
      childImageSharp {
        fixed(width: 118, height: 78) {
          ...GatsbyImageSharpFixed
        }
      }
    }
  }
`

export default Navbar
